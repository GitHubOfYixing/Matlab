    哈密顿路径问题在上世纪七十年代初，终于被证明是“NP完备”的。据说具有这样性质的问题，难于找到一个有效的算法。
    实际上对于某些顶点数不到100的网络，利用现有最好的算法和计算机也需要比较荒唐的时间（比如几百年）才能确定其是否存在一条这样的路径。
    从图中的任意一点出发，路途中经过图中每一个结点当且仅当一次，则成为哈密顿回路。
要满足两个条件：
 1. 封闭的环
 2. 是一个连通图，且图中任意两点可达
 2.1 经过图（有向图或无向图）中所有顶点一次且仅一次的通路称为哈密顿通路。
 2.2 经过图中所有顶点一次且仅一次的回路称为哈密顿回路。
 2.3 具有哈密顿回路的图称为哈密顿图，具有哈密顿通路但不具有哈密顿回路的图称为半哈密顿图。
 2.4 平凡图是哈密顿图。

顶点：v1,v2,v3,v4,v5,v6
边：（按照前项比后项大进行排序）
(v1-6-v2)(v1-1-v3)(v1-5-v4)
(v2-5-v3)(v2-3-v5)
(v3-5-v4)(v3-6-v5)(v3-4-v6)
(v4-2-v6)
(v5-6-v6)
prim算法（n=6节点）
1：随机选择一个顶点（U集合存放顶点，TE集合存放边）
U={v1}; TE={}
查找一个顶点在U集合中，另一个顶点在V-U集合中具有最小权值
U={v1,v3}; TE={(v1-v3)}
U={v1,v3,v6}; TE={(v1-v3),(v3-v6)}
U={v1,v3,v6,v4}; TE={(v1-v3),(v3-v6),(v6-v4)}
U={v1,v3,v6,v4,v2}; TE={(v1-v3),(v3-v6),(v6-v4),(v3-v2)}
U={v1,v3,v6,v4,v2,v5}; TE={(v1-v3),(v3-v6),(v6-v4),(v3-v2),(v2-v5)}
MinTree = {(v1-v3),(v3-v6),(v6-v4),(v3-v2),(v2-v5)}

克鲁斯卡尔算法（n=6节点）
1：图中各边权值排序
(1)v1-v3
(2)v4-v6
(3)v2-v5
(4)v3-v6
(5)v1-v4*
(5)v2-v3
(5)v3-v4*
(6)v1-v2*
(6)v3-v5*
(6)v5-v6*
2：依次遍历找出最小边（但这些边不能构成环）（共找出n-1=5条边）
(v1-v3)
(v4-v6)
(v2-v5)
(v3-v6)
(v2-v3)
MinTree = {(v1-v3),(v4-v6),(v2-v5),(v3-v6),(v2-v3)}




